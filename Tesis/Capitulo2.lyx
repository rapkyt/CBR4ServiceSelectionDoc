#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass myBook
\begin_preamble

\end_preamble
\use_default_options false
\maintain_unincluded_children false
\language spanish
\language_package babel
\inputencoding auto
\fontencoding default
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 0
\use_package cancel 0
\use_package esint 1
\use_package mathdots 0
\use_package mathtools 0
\use_package mhchem 0
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 2
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Desarrollo de Aplicaciones Orientadas a Servicios
\begin_inset CommandInset label
LatexCommand label
name "cap:SOApp"

\end_inset


\end_layout

\begin_layout Section
Introducción 
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "sec:introCap2"

\end_inset


\end_layout

\begin_layout Standard
En el capítulo previo se describió la motivación principal de esta tesis
 que consiste en la estandarización del proceso de selección de Servicios
 Web utilizando la metodología Razonamiento Basado en Casos, la persistencia
 de la Base de Conocimientos y una pieza de software capaz de generar instancias
 del Metamodelo a partir de una especificación OpenAPI, considerado una
 mejora de suma importancia para el Proceso de Evaluación y Selección de
 Servicios Web.
 El Metamodelo se basa actualmente en especificaciones sencillas derivadas
 de las descripciones WSDL de servicios; para evaluar el nivel de compatibilidad
 y también estimar el esfuerzo de adaptación de un servicio candidato para
 su integración en una aplicación en desarrollo específica.
 Las especificaciones actuales de servicios son descripciones WSDL, las
 cuales van perdiendo uso en la industria actual de tecnologías de Servicio
 Web, que está adoptando estándares de descripción modernos, como OpenAPI
 entre otros, cada vez con mayor frecuencia.
\end_layout

\begin_layout Standard
La evaluación de interfaces es un tema muy estudiado en el paradigma de
 Desarrollo de Software Basado en Componentes (CSBD
\begin_inset Foot
status open

\begin_layout Plain Layout
Component-based Software Development
\end_layout

\end_inset

), y gran parte del trabajo alcanzado en este área ha sido adaptado para
 la evaluación de interfaces de servicios.
 Un ejemplo es el Algoritmo de Stroulia-Wang analizado en 
\begin_inset CommandInset citation
LatexCommand cite
key "stroulia2005structural,Wang03b,Wang03a"

\end_inset

.
 En el presente Capítulo se describe el enfoque para facilitar el desarrollo
 de Aplicaciones Orientadas a Servicios, que se constituye como un 
\emph on
Proceso de
\emph default
 
\emph on
Selección
\emph default
 
\emph on
de Servicios Web
\emph default

\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "castro16,Cors12,DeRenzis13"

\end_inset

 y posee una herramienta como soporte semi-automático.
\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Metamodelo-para-descripción"

\end_inset

Metamodelo para descripción de Servicios Web
\end_layout

\begin_layout Standard
Es necesario contar con una especificación de contratos de Servicios Web
 que sea independiente de cualquier tecnología de implementación.
 Por este motivo, utilizando como base los estándares mencionados en la
 Sección 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Background"

\end_inset

(Capítulo 1), SoaML, WSDL y WADL 
\begin_inset Note Note
status open

\begin_layout Plain Layout
actualizar
\end_layout

\end_inset

, se ha decidido utilizar el Metamodelo para Descripción de Contratos de
 Servicios Web
\begin_inset Note Note
status open

\begin_layout Plain Layout
cita?
\end_layout

\end_inset

.
 La Figura
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Diagrama-de-clases"

\end_inset

 muestra el diagrama de clases del metamodelo utilizado, que se explicará
 en la Sección 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Vision-Detallada"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ImgChapter3/InterfaceMetamodel.png
	lyxscale 50
	width 90text%

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Caption Standard

\begin_layout Plain Layout
Diagrama de clases del Metamodelo
\begin_inset CommandInset label
LatexCommand label
name "fig:Diagrama-de-clases"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
El metamodelo surge de la conjunción de estándares y criterios, a partir
 de los cuales se han definido las clases involucradas.
 En la Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Diagrama-de-Venn"

\end_inset

 se aprecia la distribución de las clases en base al origen de cada una.
 Del estándar SoaML provienen las clases 
\emph on
Consumer
\emph default
,
\emph on
 Provider
\emph default
,
\emph on
 Interface
\emph default
 y 
\emph on
Choreography
\emph default
.
 Del estándar WSDL 2.0 se definieron las clases 
\emph on
Operation
\emph default
, 
\emph on
Input
\emph default
, 
\emph on
Output
\emph default
, 
\emph on
Fault
\emph default
, 
\emph on
SimpleType
\emph default
, 
\emph on
ComplexType
\emph default
 e 
\emph on
Interface
\emph default
.
 Se destaca que 
\emph on
Interface
\emph default
 se encuentra en ambos estándares, convirtiéndose en el nexo entre las mismas.
 Para denotar la semántica esperada que permitirá realizar evaluaciones
 exhaustivas de servicios, se han creado clases adicionales, como son 
\emph on
Parameter
\emph default
, 
\emph on
Type
\emph default
, 
\emph on
ArrayType
\emph default
 y 
\emph on
Attribute
\emph default
.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ImgChapter3/DiagramaDeVennAnalisisDeClases.png
	lyxscale 40
	width 75col%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Diagrama-de-Venn"

\end_inset

Diagrama de Venn para categorización de clases de acuerdo a los estándares
 utilizados 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "subsec:Vision-Detallada"

\end_inset

Visión Detallada
\end_layout

\begin_layout Standard
En esta sección se describe cada 
\emph on
clase
\emph default
 que compone al diagrama de clases de la Figura
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Diagrama-de-clases"

\end_inset

.
 El mismo comienza por dos clases principales, que son las desencadenantes
 del comienzo del proceso de descubrimiento y selección de servicios, la
 clase 
\emph on
Consumer
\emph default
, y la clase 
\emph on
Provider
\emph default
.
 La clase 
\emph on
Consumer
\emph default
 (Figura
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Diagrama-de-Consumer"

\end_inset

) denota la interfaz que denominamos 
\begin_inset Formula $I_{C}$
\end_inset

 (Interfaz a Consumir) que representa las funcionalidades que necesita satisface
r cuando se consume el Servicio Web adecuado.

\emph on
 
\emph default
Por otro lado, la clase 
\emph on
Provider
\emph default
 (Figura
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Diagrama-de-Provider"

\end_inset

) denota la interfaz que denominamos 
\begin_inset Formula $I_{P}$
\end_inset

 (Interfaz Provista), que representa al proveedor del servicio cuyas responsabil
idades incluyen conocer el nombre del servicio (por ejemplo, servicio de
 alquiler de coches), y eventualmente podría contener datos propios del
 proveedor que se consideren relevantes.
\end_layout

\begin_layout Standard
La clase 
\emph on
Choreography 
\emph default
(Figura
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Diagrama-de-Choreography"

\end_inset

) denota los pasos que se deben respetar a la hora de representar secuencias
 válidas de llamadas a operaciones de un servicio en particular.
 Durante el desarrollo de este trabajo se tomará como soporte a la explicación,
 un Servicio Web perteneciente al dominio de alquiler de automóviles (RentACar).
 Por ejemplo, una secuencia válida en dicho dominio sería llamar primero
 a una operación para comprobar si un auto está disponible para luego invocar
 a la operación para alquilar el mismo.
 Al momento de evaluar las responsabilidades del servicio, este aspecto
 secuencial resulta irrelevante.
 Sin embargo creemos que tiene mucho potencial a la hora de evaluar el comportam
iento del servicio, puesto que la lógica que representa permite agregar
 claridad en el comportamiento esperado de la secuencialidad de llamadas
 a funciones específicas.
 Complementario a la clase 
\emph on
Choreography
\emph default
 se debería proveer un diagrama auxiliar (por ejemplo, diagrama de secuencia
 UML) para denotar la lógica del orden de llamados para el uso de una función
 específica.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{figure}[!htb]
\end_layout

\begin_layout Plain Layout

   
\backslash
begin {minipage}{0.3
\backslash
textwidth}
\end_layout

\begin_layout Plain Layout

     
\backslash
centering
\end_layout

\begin_layout Plain Layout

     
\backslash
includegraphics[width=1.0
\backslash
linewidth]{ImgChapter3/consumer.png}
\end_layout

\begin_layout Plain Layout

     
\backslash
caption{Diagrama de clase Consumer}
\backslash
label{fig:Diagrama-de-Consumer}
\end_layout

\begin_layout Plain Layout

   
\backslash
end{minipage}
\backslash
hfill
\end_layout

\begin_layout Plain Layout

   
\backslash
begin{minipage}{0.3
\backslash
textwidth}
\end_layout

\begin_layout Plain Layout

     
\backslash
centering
\end_layout

\begin_layout Plain Layout

     
\backslash
includegraphics[width=1.0
\backslash
linewidth]{ImgChapter3/Provider.png}
\end_layout

\begin_layout Plain Layout

     
\backslash
caption{Diagrama de clase Provider}
\backslash
label{fig:Diagrama-de-Provider}
\end_layout

\begin_layout Plain Layout

   
\backslash
end{minipage}
\backslash
hfill
\end_layout

\begin_layout Plain Layout

   
\backslash
begin {minipage}{0.3
\backslash
textwidth}
\end_layout

\begin_layout Plain Layout

     
\backslash
centering
\end_layout

\begin_layout Plain Layout

     
\backslash
includegraphics[width=1.0
\backslash
linewidth]{ImgChapter3/choreography.png}
\end_layout

\begin_layout Plain Layout

     
\backslash
caption{Diagrama de clase Choreography}
\backslash
label{fig:Diagrama-de-Choreography}
\end_layout

\begin_layout Plain Layout

   
\backslash
end{minipage}
\end_layout

\begin_layout Plain Layout


\backslash
end{figure}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
La clase 
\emph on
Interface
\emph default
 (Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Diagrama-de-Interfaz Interface"

\end_inset

) es la responsable de encapsular las operaciones que ofrece cada servicio,
 y cada instancia de 
\emph on
Interface
\emph default
 está íntimamente vinculada con 
\emph on
Consumer
\emph default
 o 
\emph on
Provider
\emph default
 dependiendo con quién se relacione explícitamente.
 El procedimiento de Análisis de Compatibilidad de Interfaces compara la
 instancia Interface del 
\emph on
Consumer 
\emph default
(lo esperado por el consumidor) con las instancias de cada Interface del
 servicio candidato 
\emph on
Provider
\emph default
.
 A su vez, 
\emph on
Interface 
\emph default
está compuesta por una lista de al menos una operación (
\emph on
Operation
\emph default
, Figura
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Diagrama-de-Interfaz-Operation"

\end_inset

).

\emph on
 
\begin_inset Newline newline
\end_inset


\emph default
La clase 
\emph on
Operation 
\emph default
representa a cada una de las funciones operacionales provistas/solicitadas
 por cada proveedor/consumidor de un servicio.
 Cada operación está compuesta por su nombre (un identificador que describe
 semánticamente la función de la operación), puede o no tener una entrada
 (
\emph on
Input
\emph default
, Figura
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Diagrama-de-Interfaz-Input"

\end_inset

) y puede o no tener una salida (
\emph on
Output
\emph default
, Figura
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Diagrama-de-Interfaz-output"

\end_inset

).
 A su vez, podría o no tener una o más excepciones o fallas (
\emph on
Faults
\emph default
, Figura
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Diagrama-de-fault"

\end_inset

).
 
\begin_inset Newline newline
\end_inset

La clase 
\emph on
Input
\emph default
 (Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Diagrama-de-Interfaz-Input"

\end_inset

) representa los datos que la operación espera como entrada y está compuesto
 por un nombre y una lista de al menos un parámetro (
\emph on
Parameter
\emph default
, Figura
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Diagrama-de-Interfaz-parameter"

\end_inset

) que actúa como entrada de la operación.
 
\begin_inset Newline newline
\end_inset

Inversamente, la clase 
\emph on
Output
\emph default
 (Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Diagrama-de-Interfaz-output"

\end_inset

) representa la salida/retorno de una operación.
 En el metamodelo, la salida de una operación (
\emph on
Output
\emph default
) está compuesta por un nombre, que puede ser cualquier tipo de identificador
 que represente a la salida de la operación y un conjunto de parámetros
 que determina cada uno de los datos que son retornados por la operación
 del servicio.
 
\begin_inset Newline newline
\end_inset

En el contexto de los Servicios Web, la definición de excepciones representadas
 por la clase
\emph on
 Fault
\emph default
 no se han convertido en una práctica común 
\begin_inset CommandInset citation
LatexCommand cite
key "rodriguez2013best"

\end_inset

 y de hecho, la mayoría de los WSDL no incluyen el detalle del manejo de
 excepciones.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{figure}[!htb]
\end_layout

\begin_layout Plain Layout

   
\backslash
begin{minipage}{0.3
\backslash
textwidth}
\end_layout

\begin_layout Plain Layout

     
\backslash
centering
\end_layout

\begin_layout Plain Layout

     
\backslash
includegraphics[width=1.0
\backslash
linewidth]{ImgChapter3/Interface.png}
\end_layout

\begin_layout Plain Layout

     
\backslash
caption{Diagrama de clase Interface}
\backslash
label{fig:Diagrama-de-Interfaz Interface}
\end_layout

\begin_layout Plain Layout

   
\backslash
end{minipage}
\backslash
hfill
\end_layout

\begin_layout Plain Layout

   
\backslash
begin {minipage}{0.3
\backslash
textwidth}
\end_layout

\begin_layout Plain Layout

     
\backslash
centering
\end_layout

\begin_layout Plain Layout

     
\backslash
includegraphics[width=1.0
\backslash
linewidth]{ImgChapter3/Operation.png}
\end_layout

\begin_layout Plain Layout

     
\backslash
caption{Diagrama de clase Operation}
\backslash
label{fig:Diagrama-de-Interfaz-Operation}
\end_layout

\begin_layout Plain Layout

   
\backslash
end{minipage}
\backslash
hfill
\end_layout

\begin_layout Plain Layout


\backslash
end{figure}
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{figure}[!htb]
\end_layout

\begin_layout Plain Layout

   
\backslash
begin{minipage}{0.3
\backslash
textwidth}
\end_layout

\begin_layout Plain Layout

     
\backslash
centering
\end_layout

\begin_layout Plain Layout

     
\backslash
includegraphics[width=1.0
\backslash
linewidth]{ImgChapter3/Input.png}
\end_layout

\begin_layout Plain Layout

     
\backslash
caption{Diagrama de clase Input}
\backslash
label{fig:Diagrama-de-Interfaz-Input}
\end_layout

\begin_layout Plain Layout

   
\backslash
end{minipage}
\backslash
hfill
\end_layout

\begin_layout Plain Layout

   
\backslash
begin {minipage}{0.3
\backslash
textwidth}
\end_layout

\begin_layout Plain Layout

     
\backslash
centering
\end_layout

\begin_layout Plain Layout

     
\backslash
includegraphics[width=1.0
\backslash
linewidth]{ImgChapter3/output.png}
\end_layout

\begin_layout Plain Layout

     
\backslash
caption{Diagrama de clase Output}
\backslash
label{fig:Diagrama-de-Interfaz-output}
\end_layout

\begin_layout Plain Layout

   
\backslash
end{minipage}
\backslash
hfill
\end_layout

\begin_layout Plain Layout

   
\backslash
begin {minipage}{0.3
\backslash
textwidth}
\end_layout

\begin_layout Plain Layout

     
\backslash
centering
\end_layout

\begin_layout Plain Layout

     
\backslash
includegraphics[width=1.0
\backslash
linewidth]{ImgChapter3/Fault.png}
\end_layout

\begin_layout Plain Layout

     
\backslash
caption{Diagrama de clase Fault}
\backslash
label{fig:Diagrama-de-fault}
\end_layout

\begin_layout Plain Layout

   
\backslash
end{minipage}
\end_layout

\begin_layout Plain Layout


\backslash
end{figure}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Para los tipos de datos se define una clase abstracta llamada 
\emph on
Type
\emph default
 (Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Diagrama-de-Interfaz-type"

\end_inset

), la cual es la superclase de todos los posibles tipos de datos.
 La clase 
\emph on
Type
\emph default
 tiene tres subclases concretas: 
\end_layout

\begin_layout Itemize

\emph on
SimpleType
\emph default
 (Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Diagrama-de-Interfaz-sympletype"

\end_inset

) representa todos los posibles tipos simples o primitivos como un valor
 numérico entero secuencial.
 La clase cuenta con las siguientes propiedades públicas y estáticas: 
\emph on
STRING, INTEGER, BOOLEAN, LONG, SHORT, DECIMAL, FLOAT, DOUBLE, BYTE, DATE_TIME,
 DATE, BASE64_BINARY, HEX_BINARY, BASE64, ANY_TYPE, NORMALIZEDSTRING, ANY_URI.

\emph default
 Por convención, todas las variables se encuentran en mayúsculas por ser
 constantes.
 El atributo privado 
\emph on
type
\emph default
 de la clase descrita sólo puede tomar el valor de alguna de dichas constantes.
 Por ejemplo para crear una instancia de un 
\emph on
SimpleType
\emph default
 del tipo 
\emph on
short 
\emph default
hay que escribir la sentencia en el lenguaje Java correspondiente a 
\emph on
SimpleType shortType = new SimpleType (SimpleType.SHORT); 
\emph default
y de esta manera se evita que el programador tenga que saber cuál número
 entero representa la variable 
\emph on
SHORT, 
\emph default
lo que reduce posibles errores por parte del desarrollador.
\end_layout

\begin_layout Itemize
La clase 
\emph on
ComplexType
\emph default
 (Figura
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Diagrama-de-Interfaz-complextype"

\end_inset

) representa los tipos complejos utilizados en la operación de servicio.
 Los tipos complejos están compuestos por atributos (
\emph on
Attribute
\emph default
, Figura
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Diagrama-de-Interfaz-attribute"

\end_inset

), formados por un nombre (por ejemplo DNI, nombre, posición, etc) y un
 tipo que representa propiamente al tipo de atributo, puede ser de tipo
 simple, complejo o array.
 Es importante mencionar que la implementación propuesta permite el anidamiento
 de tipos complejos de distintos tipos, no exigiendo que sean todos de la
 misma clase.
\end_layout

\begin_layout Itemize

\emph on
ArrayType
\emph default
 (Figura
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Diagrama-de-Interfaz-arraytype"

\end_inset

) representa las colecciones tales como listas y arrays.
 Compuesto por el nombre del tipo propiamente dicho y el tipo de dato de
 los elementos contenidos.
 Si bien, a primera vista, 
\emph on
ArrayType 
\emph default
podría haberse representado con la clase 
\emph on
ComplexType,
\emph default
 cabe destacar que la clase 
\emph on
ArrayType
\emph default
 presenta un fuerte significado semántico y estructural, ya que indica que
 en su interior habrá una colección de objetos del mismo tipo.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{figure}[!htb]
\end_layout

\begin_layout Plain Layout

   
\backslash
begin{minipage}{0.3
\backslash
textwidth}
\end_layout

\begin_layout Plain Layout

     
\backslash
centering
\end_layout

\begin_layout Plain Layout

     
\backslash
includegraphics[width=1.0
\backslash
linewidth]{ImgChapter3/Parameter.png}
\end_layout

\begin_layout Plain Layout

     
\backslash
caption{Diagrama de clase Parameter}
\backslash
label{fig:Diagrama-de-Interfaz-parameter}
\end_layout

\begin_layout Plain Layout

   
\backslash
end{minipage}
\backslash
hfill
\end_layout

\begin_layout Plain Layout

   
\backslash
begin {minipage}{0.3
\backslash
textwidth}
\end_layout

\begin_layout Plain Layout

     
\backslash
centering
\end_layout

\begin_layout Plain Layout

     
\backslash
includegraphics[width=1.0
\backslash
linewidth]{ImgChapter3/Type.png}
\end_layout

\begin_layout Plain Layout

     
\backslash
caption{Diagrama de clase Type}
\backslash
label{fig:Diagrama-de-Interfaz-type}
\end_layout

\begin_layout Plain Layout

   
\backslash
end{minipage}
\backslash
hfill
\end_layout

\begin_layout Plain Layout

   
\backslash
begin{minipage}{0.3
\backslash
textwidth}
\end_layout

\begin_layout Plain Layout

     
\backslash
centering
\end_layout

\begin_layout Plain Layout

     
\backslash
includegraphics[width=1.0
\backslash
linewidth]{ImgChapter3/SimpleType.png}
\end_layout

\begin_layout Plain Layout

     
\backslash
caption{Diagrama de clase SimpleType}
\backslash
label{fig:Diagrama-de-Interfaz-sympletype}
\end_layout

\begin_layout Plain Layout

   
\backslash
end{minipage}
\end_layout

\begin_layout Plain Layout


\backslash
end{figure}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{figure}[!htb]
\end_layout

\begin_layout Plain Layout

   
\backslash
begin {minipage}{0.3
\backslash
textwidth}
\end_layout

\begin_layout Plain Layout

     
\backslash
centering
\end_layout

\begin_layout Plain Layout

     
\backslash
includegraphics[width=1.0
\backslash
linewidth]{ImgChapter3/ComplexType.png}
\end_layout

\begin_layout Plain Layout

     
\backslash
caption{Diagrama de clase ComplexType}
\backslash
label{fig:Diagrama-de-Interfaz-complextype}
\end_layout

\begin_layout Plain Layout

   
\backslash
end{minipage}
\backslash
hfill
\end_layout

\begin_layout Plain Layout

   
\backslash
begin {minipage}{0.3
\backslash
textwidth}
\end_layout

\begin_layout Plain Layout

     
\backslash
centering
\end_layout

\begin_layout Plain Layout

     
\backslash
includegraphics[width=1.0
\backslash
linewidth]{ImgChapter3/Attribute.png}
\end_layout

\begin_layout Plain Layout

     
\backslash
caption{Diagrama de clase Attribute}
\backslash
label{fig:Diagrama-de-Interfaz-attribute}
\end_layout

\begin_layout Plain Layout

   
\backslash
end{minipage}
\backslash
hfill
\end_layout

\begin_layout Plain Layout

   
\backslash
begin {minipage}{0.3
\backslash
textwidth}
\end_layout

\begin_layout Plain Layout

     
\backslash
centering
\end_layout

\begin_layout Plain Layout

     
\backslash
includegraphics[width=1.0
\backslash
linewidth]{ImgChapter3/ArrayType.png}
\end_layout

\begin_layout Plain Layout

     
\backslash
caption{Diagrama de clase ArrayType}
\backslash
label{fig:Diagrama-de-Interfaz-arraytype}
\end_layout

\begin_layout Plain Layout

   
\backslash
end{minipage}
\end_layout

\begin_layout Plain Layout


\backslash
end{figure}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Correspondencia entre los estándares de descripción SOA con el Metamodelo.
\end_layout

\begin_layout Standard
El Metamodelo utilizado fue desarrollado basado en los estándares vistos
 en la Sección 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Background"

\end_inset

(Capítulo 1) SoaML, WSDL 2.0 y WADL.
 Para incluir una interacción del punto de vista SOA, se seleccionaron los
 roles Proveedor y Consumidor (
\emph on
Provider
\emph default
 y 
\emph on
Consumer
\emph default
) para describir un participante que 
\emph on
ofrece
\emph default
 o 
\emph on
usa
\emph default
, respectivamente, un servicio definiendo una interfaz en particular.
 La clase servicio describe la información principal que identifica un servicio
 web, tanto en WSDL 2.3 (
\emph on
Service
\emph default
) como en WADL (
\emph on
Application
\emph default
).
 Por lo general, una interfaz se compone por un conjunto de operaciones
 (
\emph on
Operations
\emph default
) que describen la funcionalidad de un servicio.
 Los tres estándares coinciden en esto con pequeñas diferencias, por ejemplo,
 en WADL implica un conjunto de recursos juntos con sus métodos HTTP.
 De manera similar, los estándares describen que las operaciones poseen
 mensajes de entrada y salida (
\emph on
request
\emph default
 y 
\emph on
response
\emph default
) que describen una lista de parámetros, opcionalmente estos mensajes podrían
 incluir casos de fallos o excepciones.
\end_layout

\begin_layout Standard
A continuación explicaremos la correspondencia entre los elementos perteneciente
s a los estándares SoaML, WSDL 2.0 y WADL con los pertenecientes al metamodelo
 utilizado.
 Las Tablas 
\lang english

\begin_inset space ~
\end_inset


\lang spanish

\begin_inset CommandInset ref
LatexCommand ref
reference "tab:SoaML-n-Metamodel"

\end_inset

,
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "tab:WSDL2-n-Metamodel"

\end_inset

 y
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "tab:WADL-n-Metamodel"

\end_inset

 presentan esta correspondencia, donde 
\begin_inset Formula $+$
\end_inset

 significa que más de un elemento es considerado, 
\begin_inset Formula $|$
\end_inset

 significa que se pueden alternar entre los elementos, 
\begin_inset Formula $@$
\end_inset

 indica un atributo del elemento, y 
\begin_inset Formula $=$
\end_inset

 significa un valor específico del atributo.
\end_layout

\begin_layout Standard
De manera similar, también se presentan correspondencias con otras tecnologías
 de servicio actualmente disponibles: OpenAPI y RAML.
 Las tablas 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:OpenAPI-n-Metamodel"

\end_inset

 y 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:RAML-n-Metamodel"

\end_inset

 presentan este mapeo con similar detalle a los anteriormente mencionados.
\end_layout

\begin_layout Paragraph
Correspondencia con SoaML
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
El principal aspecto de la Tabla
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "tab:SoaML-n-Metamodel"

\end_inset

 considerando el estándar SoaML implica la interacción entre los roles participa
ntes (Proveedor y Consumidor) dentro de una 
\emph on
ServiceInterface
\emph default
, mediante una Orquestación.
 Con respecto a una descripción particular de interfaz, en SoaML generalmente
 se utiliza una 
\emph on
UML Interface
\emph default
, aunque el intercambio de datos se modela con estereotipos específicos,
 llamados 
\emph on
MessageType
\emph default
 y 
\emph on
DataType
\emph default
, que se corresponden con 
\emph on
Parameter
\emph default
 y 
\emph on
Type
\emph default
 respectivamente.
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\paragraph_spacing onehalf
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="11" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size footnotesize
SoaML 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size footnotesize
Metamodelo
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Interface realizada por una ServiceInterface
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Provider + Service
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Interface usada por una ServiceInterface
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Consumer + Service
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
ServiceInterface Interaction Protocol
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Orchestration
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Interface
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Interface
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Operation
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Operation
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Input 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Response
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Output
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Exception
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Fault
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
<<MessageType>>
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Parameter
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
<<DataType>>
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Type
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\noindent
\begin_inset Caption Standard

\begin_layout Plain Layout
Correspondencia entre SoaML y Metamodelo
\begin_inset CommandInset label
LatexCommand label
name "tab:SoaML-n-Metamodel"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Correspondencia con WSDL 2.0
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
En la Tabla 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:WSDL2-n-Metamodel"

\end_inset

 se considera que una especificación WSDL 2.0 especifica un 
\emph on
Service
\emph default
 como una colección de operaciones (
\emph on
Operations
\emph default
) que requieren de una entrada (
\emph on
Input
\emph default
) y devuelven una salida (
\emph on
Output
\emph default
) o presentan una excepción (
\emph on
Faults
\emph default
).
 Un archivo WSLD consiste de tres secciones: el esquema que especifica los
 tipos de datos (
\emph on
Types
\emph default
) usados como parámetros de los mensajes (
\emph on
Parameters
\emph default
), la interfaz (
\emph on
Interface
\emph default
) que especifica las operaciones, y el 
\emph on
Binding
\emph default
, que especifica los aspectos del servicio relacionados a su implementación.
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\paragraph_spacing onehalf
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="10" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0pt">
<column alignment="left" valignment="top" width="0pt">
<column alignment="center" valignment="top">
<row>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" bottomline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size footnotesize
WSDL 2.0 
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size footnotesize
Metamodelo
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Service
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\shape italic
\size footnotesize
@name | endpoint@name +
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Service
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" usebox="none" special="r">
\begin_inset Text

\begin_layout Plain Layout

\shape italic
\size footnotesize
endpoint@address + description@nameSpace
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Interface
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\shape italic
\size footnotesize
@name + @nameSpace + @style=URI
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Interface
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Operation
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\shape italic
\size footnotesize
@name
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Operation
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Input
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\shape italic
\size footnotesize
@messageLabel
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Output
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\shape italic
\size footnotesize
@messageLabel
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Output
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Fault
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\shape italic
\size footnotesize
@messageLabel + infault | outfault
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Fault
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Types
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\shape italic
\size footnotesize
element@name
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Parameter
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Types
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\shape italic
\size footnotesize
complexType + sequence + element
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Type
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Correspondencia entre WSDL 2.0 y Metamodelo 
\begin_inset CommandInset label
LatexCommand label
name "tab:WSDL2-n-Metamodel"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Correspondencia con WADL
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
En la Tabla 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:WADL-n-Metamodel"

\end_inset

 se muestra que WADL define un servicio 
\emph on
Service
\emph default
 como una aplicación web basada en HTTP (
\emph on
HTTP-based Web 
\shape italic
Application
\shape default
\emph default
), describiendo una interfaz (
\emph on
Interface
\emph default
) compuesta por un conjunto de recursos (
\emph on
Resources
\emph default
) en los que se les pueden aplicar métodos HTTP.
 Como tal, una especificación WADL se puede separar en dos partes: el esquema
 y los recursos.
 El esquema se llama gramáticas (
\emph on
Grammars
\emph default
) y describen los tipos de datos (
\emph on
Types
\emph default
).
 La parte de recursos incluye una ruta (
\emph on
Path
\emph default
) que actúa como una URL para un recurso en particular.
 Un método (
\emph on
Method
\emph default
) contiene una solicitud (
\emph on
Request
\emph default
) que actúa como entrada (
\emph on
Input
\emph default
) y posee múltiples respuestas (
\emph on
Responses
\emph default
) dependiendo el estado HTTP - donde un estado = 200 significa que la salida
 (
\emph on
Output
\emph default
) es exitosa, mientras que un estado = 400 significa que ha habido una falla
 (
\emph on
Fault
\emph default
).
 los parámetros (
\emph on
Param
\emph default
) de la solicitud definen un nombre (
\emph on
Name
\emph default
) y un estilo (
\emph on
Style)
\emph default
, por ejemplo: encabezados (
\emph on
Header
\emph default
), consulta (
\emph on
Query
\emph default
).
 los parámetros de la respuesta describen la representación (Representation)
 de los mensajes con un tipo de datos (
\emph on
MediaType
\emph default
), por ejemplo XML o JSON, en el cual se definen los datos.
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\paragraph_spacing onehalf
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="10" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top">
<row>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size footnotesize
WADL 
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size footnotesize
Metamodelo
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Application
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\shape italic
\size footnotesize
@nameSpace + @schemaLocation
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Service
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Resources
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\shape italic
\size footnotesize
@base + resource@path
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Interface
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Method
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\shape italic
\size footnotesize
@name + @id
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Operation
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Request
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Response
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\shape italic
\size footnotesize
@status=20x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Output
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Fault
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\shape italic
\size footnotesize
@status=40x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Fault
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Param
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\shape italic
\size footnotesize
@name + @style
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Parameter
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Representation
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\shape italic
\size footnotesize
@mediatype + @element
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Parameter
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Grammars
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Type
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Correspondencia entre WADL y Metamodelo
\begin_inset CommandInset label
LatexCommand label
name "tab:WADL-n-Metamodel"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Correspondencia con OpenAPI
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
En la Tabla 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:OpenAPI-n-Metamodel"

\end_inset

 se muestra que en OpenAPI, una especificación de un servicio define información
 general como título (
\emph on
name
\emph default
) y la dirección URL del servidor que provee dicho servicio.
 La interfaz es descripta por rutas (
\emph on
Paths
\emph default
) que contienen múltiples objetos (
\emph on
Path
\emph default
) a recursos individuales.
 Cada ruta contiene al menos una operación (
\emph on
Operation
\emph default
) que identifica una operación HTTP, que podrían contener múltiples parámetros
 (
\emph on
Parameter
\emph default
) como entrada y múltiples salidas, exitosas (
\emph on
Output
\emph default
) o fallidas (
\emph on
Fault
\emph default
), de manera similar que WADL.
 Un esquema (
\emph on
Schema
\emph default
) determina el formato del intercambio de parámetros.
 La sección de definiciones (
\emph on
Definitions
\emph default
) describe las estructuras de datos utilizados en las diferentes partes
 del documento Swagger.
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\paragraph_spacing onehalf
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="9" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top">
<row>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size footnotesize
OpenAPI 
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size footnotesize
Metamodelo
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
API
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\shape italic
\size footnotesize
info@title + server@url
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Service
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Paths
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Interface
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Operation
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\shape italic
\size footnotesize
@operation + @path + @operationId
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Operation
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Parameters
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\shape italic
\size footnotesize
@name + @in
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Response
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\shape italic
\size footnotesize
@status=20x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Output
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Response
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\shape italic
\size footnotesize
@status=40x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Fault
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Schema
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\shape italic
\size footnotesize
@content 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Parameter
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Definitions
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Type
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Correspondencia entre OpenAPI y Metamodelo
\begin_inset CommandInset label
LatexCommand label
name "tab:OpenAPI-n-Metamodel"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Correspondencia con RAML
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
En la Tabla 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:RAML-n-Metamodel"

\end_inset

 se muestra que en RAML, una especificación de un servicio define su nombre
 con un título (
\emph on
title
\emph default
).
 La interfaz es definida por los recursos (
\emph on
Resources
\emph default
) que pueden, o definir tipos de recursos (
\emph on
resource types
\emph default
) o características (
\emph on
traits
\emph default
) como patrones reusables a lo largo de múltiples recursos y métodos.
 Los tipos de recursos son definiciones parciales de recursos donde métodos
 HTTP (
\emph on
Operation
\emph default
) son especificados.
 Las características son definiciones parciales de métodos (
\emph on
Method
\emph default
) especificando elementos comunes, por ejemplo, descripciones, parámetros
 (
\emph on
query string parameters
\emph default
)
\emph on
 
\emph default
o respuestas (
\emph on
Responses
\emph default
).
 esquemas XML y JSON también pueden ser usado para escribir el cuerpo (
\emph on
body
\emph default
) de una solicitud o respuesta (
\emph on
Request
\emph default
 o 
\emph on
Response
\emph default
).
 La sección de tipos (
\emph on
Types
\emph default
) describen las estructuras de tipos de datos usados en el documento, siendo
 el arreglo (
\emph on
Array
\emph default
) una de sus estructuras específicas para manejar colecciones de datos de
 manera correcta.
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\paragraph_spacing onehalf
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="9" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size footnotesize
RAML 
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size footnotesize
Metamodelo
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
API
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\shape italic
\size footnotesize
@title + @baseURI + @mediaType
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Service
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Resources
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
@resourcetypes | @traits
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Interface
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Methods
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\shape italic
\size footnotesize
@HTTP method + @path
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Operation
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Request
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
@headers | @body | @query
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Input
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Responses
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
@status=20x | @headers | @body
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Output
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Fault
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
@status=40x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Fault
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Parameter
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
@description | @type | @properties | @page
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Parameter
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Types
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
@type | @schema + @properties + @paging
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Type
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Correspondencia entre RAML y Metamodelo
\begin_inset CommandInset label
LatexCommand label
name "tab:RAML-n-Metamodel"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:Intregracion-a-Testooj"

\end_inset

Herramienta de Evaluación de Servicios Web 
\end_layout

\begin_layout Standard
Durante el desarrollo de una Aplicación Orientada a Servicios, un ingeniero
 de software puede decidir la implementación de algunas partes específicas
 de un sistema en la forma de componentes 
\emph on
in-house
\emph default
.
 Sin embargo, para otras piezas del sistema se podría optar por la adquisición
 de componentes de terceras partes, que a su vez podrían ser resueltos por
 medio de Servicios Web.
 Luego, una Aplicación Orientada a Servicios generalmente posee funcionalidades
 que no están implementadas de manera local.
\end_layout

\begin_layout Standard
El objetivo principal del Metamodelo para descripción de Contratos de Servicios
 Web es contar con una especificación de la funcionalidad que ofrece cada
 servicio (independientemente de la tecnología en la cual esté implementado).
 Al contar con dicho metamodelo resulta necesario que la evaluación de servicios
 candidatos se realice en función de instanciaciones del metamodelo.
 Para ello, se usó un componente de software que contiene al metamodelo.
 Tanto los requerimientos funcionales por parte de desarrolladores de aplicacion
es orientadas a servicios, como los propios servicios candidatos, serán
 representados y comparados mediante instanciaciones del metamodelo.
 
\end_layout

\begin_layout Subsection
Proceso de selección y descubrimiento
\end_layout

\begin_layout Standard
En la Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Esquema-propuesto"

\end_inset

 se presenta de manera esquemática el proceso de descubrimiento y selección
 de Servicios Web, considerando los componentes metamodelo y conversor,
 que son parte de la Herramienta de Evaluación de Servicios Web.
 El proceso consiste inicialmente en generar instancias del metamodelo a
 partir de los documentos WSDL correspondientes a los Servicios Web candidatos.
 En el Paso 1.1 se generan las instancias del metamodelo que corresponden
 al requerimiento funcional del servicio que se espera consumir por la aplicació
n – denominadas 
\begin_inset Formula $I_{C}$
\end_inset

 (Interfaz a Consumir) – a partir de la cual se generan consultas (
\emph on
queries
\emph default
).
 Luego en el Paso 1.2 se realizan las consultas en el registro de descubrimiento
 (tal como el de EasySOC), para obtener los documentos WSDL de los servicios
 del Proveedor, que pueden corresponder a versiones 1.1 y 2.0.
 Con estos documentos, se generan las instancias del metamodelo – denominadas
 
\begin_inset Formula $I_{P}$
\end_inset

 (Interfaz Provista) – utilizando el componente Conversor para obtener el
 conjunto que servirá de entrada al Paso 2, que es la selección del servicio
 candidato más apto.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ImgChapter3/EsquemaMetodoNuevo.png
	lyxscale 50
	width 100col%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Esquema-propuesto"

\end_inset

Proceso de Descubrimiento y Selección de Servicios Web
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
En el procedimiento de Análisis de Compatibilidad de Interfaces (Figura
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Análisis-de-Compatibilidad-Interfcaes"

\end_inset

), que es parte del Método de Selección de Servicios Web (Paso 2), se cuentan
 con instancias del metamodelo, mediante el ingreso de los objetos 
\begin_inset Formula $I_{P}$
\end_inset

 e 
\begin_inset Formula $I_{C}$
\end_inset

, por lo que se puede acceder a todos sus atributos en una forma directa
 para el proceso de obtención de elementos de signatura y evaluación tanto
 semántica como estructural.
 
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ImgChapter3/Análisis-de-Compatibilidad-Interfaces.png
	lyxscale 50
	width 98text%

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Análisis-de-Compatibilidad-Interfcaes"

\end_inset

Análisis de Compatibilidad de Interfaces
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Análisis de Compatibilidad de Interfaces
\begin_inset CommandInset label
LatexCommand label
name "sec:Compatibilidad-InterfacesOld"

\end_inset


\end_layout

\begin_layout Standard
El procedimiento completo para el análisis semántico estructural de compatibilid
ad de interfaces se resume en la Figura
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Análisis-de-Compatibilidad-Interfcaes"

\end_inset

.
 Como paso inicial se necesita la especificación sencilla de la funcionalidad
 provista en forma de una instancia del Metamodelo (
\begin_inset Formula $I_{P}$
\end_inset

).
 El procedimiento de compatibilidad de interfaces evalúa la interfaz provista
 
\begin_inset Formula $I_{P}$
\end_inset

 y la interfaz a consumir 
\begin_inset Formula $I_{C}$
\end_inset

 perteneciente a un servicio a consumir 
\begin_inset Formula $S$
\end_inset

.
 A través de un análisis estructural y semántico, los elementos de signatura
 de las operaciones (tipo de retorno, nombre operación, parámetros, excepciones)
 se caracterizan de acuerdo a distintos niveles de compatibilidad.
 A continuación se introducen los pasos principales del Análisis de Compatibilid
ad de Interfaces.
\begin_inset Newline newline
\end_inset

 El primer paso que se realiza es la extracción de elementos de signatura:
 por cada una de las interfaces bajo análisis, se extraen tipos y nombres
 de la operación, parámetros, retornos y excepciones para ser comparados
 contra los de la interfaz requerida.
 Luego de recuperados cada uno de los elementos de signatura, se procede
 a realizar la extracción de información estructural y semántica.
 
\begin_inset Newline newline
\end_inset

Respecto a los nombres de operaciones, se generan las listas de términos
 respectivas para los nombres de operación de 
\begin_inset Formula $op_{P}$
\end_inset

 ∈ 
\begin_inset Formula $I_{P}$
\end_inset

 y de 
\begin_inset Formula $op_{C}$
\end_inset

 ∈ 
\begin_inset Formula $I_{C}$
\end_inset

 que se estén comparando, se eliminan términos sin significado (stop words)
 y finalmente se identifica la raíz o lema (stem) de los términos significativos
 – en un proceso denominado stemming.
 De manera similar, se procesan los identificadores y se extraen los tipos
 de cada parámetro incorporando además el análisis exhaustivo de parámetros
 de tipo complejo.
 
\begin_inset Newline newline
\end_inset

Para el análisis estructural se comparan los tipos de datos de los elementos
 de signatura de las operaciones 
\begin_inset Formula $op_{P}$
\end_inset

 ∈ 
\begin_inset Formula $I_{P}$
\end_inset

 contra las operaciones 
\begin_inset Formula $op_{C}$
\end_inset

 ∈ 
\begin_inset Formula $I_{C}$
\end_inset

.
 Para la comparación entre dos tipos de datos entre sí se utilizan las nociones
 de equivalencia de tipos de datos y subtipificación, definidas en la Sección
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Equivalencia-de-Tipos"

\end_inset

.
 Para el análisis semántico de parámetros, se comparan los nombres de los
 parámetros y, en caso que se trate de parámetros complejos, también se
 comparan los nombres de los campos que lo componen.
 Análogamente, se aplica análisis semántico de retorno de tipo complejo.
 No se realiza análisis semántico para las excepciones, ya que en el contexto
 de Servicios Web la definición de excepciones (faults de acuerdo a la terminolo
gía para WSDL) no es una práctica común
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "garriga2013service"

\end_inset

.
 Por ello el análisis semántico de excepciones no afecta de manera crítica
 la compatibilidad de interfaces.
 
\begin_inset Newline newline
\end_inset

Luego de las etapas de análisis, se realiza el cálculo de los valores de
 compatibilidad estructural y semántica entre las operaciones, que serán
 utilizados para determinar el valor de compatibilidad final entre la interfaz
 provista y a consumir.
 El resultado principal del análisis de compatibilidad de interfaces es
 una lista de mapeos de interfaces identificando correspondencias entre
 las operaciones de la interfaz provista 
\begin_inset Formula $I_{P}$
\end_inset

 y las operaciones de la interfaz 
\begin_inset Formula $I_{C}$
\end_inset

 de un Servicio Web S a consumir.
 Además, se obtiene una lista de sugerencias de correspondencias de parámetros
 que permite distinguir, para cada par de operaciones compatibles (
\begin_inset Formula $op_{P}$
\end_inset

 ∈ 
\begin_inset Formula $I_{P}$
\end_inset

, 
\begin_inset Formula $op_{C}$
\end_inset

 ∈ 
\begin_inset Formula $I_{C}$
\end_inset

) en la lista de mapeos de interfaces, qué parámetro de la interfaz a consumir
 le corresponde a cada parámetro de la interfaz provista para que la compatibili
dad de las operaciones sea la mayor.
 Finalmente se obtienen un valor de compatibilidad (relativo a aspectos
 funcionales) y un valor de adaptabilidad que refleja el esfuerzo que se
 requiere para adaptar e integrar la interfaz candidata a la aplicación
 cliente.
 Los aspectos más relevantes sobre los procedimientos de evaluación estructural
 y semántica, serán detallados en la Sección
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Parámetros"

\end_inset

.
\end_layout

\begin_layout Section
Equivalencia Estructural y Semántica
\begin_inset CommandInset label
LatexCommand label
name "subsec:Condiciones-de-Equivalencia"

\end_inset


\end_layout

\begin_layout Standard
Sea 
\begin_inset Formula $I_{P}$
\end_inset

 la interfaz de cierta funcionalidad requerida para una aplicación cliente,
 e 
\begin_inset Formula $I_{C}$
\end_inset

 la interfaz de un Servicio Web a Consumir 
\begin_inset Formula $S$
\end_inset

.
 Para cada par de operaciones 
\begin_inset Formula $(op_{P},op_{C})$
\end_inset

, las probables equivalencias entre esas operaciones se basan, en primera
 instancia, en las condiciones estructurales y semánticas para cada elemento
 de signatura.
 
\end_layout

\begin_layout Subsection
Equivalencia de Tipos de Datos
\begin_inset CommandInset label
LatexCommand label
name "subsec:Equivalencia-de-Tipos"

\end_inset

 
\end_layout

\begin_layout Standard
La equivalencia de los tipos de datos ha sido establecida en función de
 la relación de subsumción conocida como 
\emph on
subtipificación
\emph default
 (se escribe
\begin_inset space ~
\end_inset


\begin_inset Formula $<:$
\end_inset

)
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "Zaremski97,Gosling05"

\end_inset

 para tipos de datos primitivos disponibles en 
\emph on
SimpleType
\emph default
 del Metamodelo, basada en la relación 
\emph on
directa
\emph default
 de subtipos (se escribe
\begin_inset space ~
\end_inset


\begin_inset Formula $<_{1}$
\end_inset

) del lenguaje Java
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "Gosling05"

\end_inset

, que se muestra en la Tabla
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Equivalencia-de-Subtipos"

\end_inset

.
 Para más información dirigirse a la Tesis
\begin_inset space ~
\end_inset

 
\begin_inset CommandInset citation
LatexCommand cite
key "castro16"

\end_inset

.
\end_layout

\begin_layout Standard
Así para las signaturas de las operaciones se consideran equivalencia de
 tipos como se muestra en la Tabla
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Equivalencia-de-Subtipos-Metamodelo"

\end_inset

, donde los tipos en 
\begin_inset Formula $op_{C}$
\end_inset

 deben al menos tener tanta precisión como los tipos en 
\begin_inset Formula $op_{P}$
\end_inset

.
 Por ejemplo si la operación 
\begin_inset Formula $op_{P}$
\end_inset

 incluye un tipo INTEGER, una operación correspondiente 
\begin_inset Formula $op_{C}$
\end_inset

 no puede tener una precisión menor como 
\family typewriter
SHORT
\family default
 o 
\family typewriter
BYTE
\family default
 (entre los tipos numéricos).
 Sin embargo, aunque se da un caso especial con el tipo STRING, que se considera
 un tipo 
\emph on
comodín
\emph default
 dado que es usado comúnmente en la práctica para alojar virtualmente cualquier
 tipo de dato
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "Pasley06"

\end_inset

, en el contexto del Metamodelo se decidió agregar el tipo ANY_TYPE para
 realizar esto con un mayor significado semántico.
 Los tipos no especificados en esta tabla no poseen ningún otro tipo compatible
 con tanta precisión.
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename ImgChapter2/EquivalenciaDeSubtiposActualizada.PNG
	lyxscale 50
	width 65text%

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "tab:Equivalencia-de-Subtipos"

\end_inset

Equivalencia de Subtipos del lenguaje Java
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="11" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="16text%">
<column alignment="left" valignment="top" width="80text%">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size small
Tipo en 
\series default

\begin_inset Formula $op_{P}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\series bold
\size small
Tipo en 
\series default

\begin_inset Formula $op_{C}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
BYTE
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
SHORT, INTEGER, LONG, DECIMAL, FLOAT, DOUBLE, STRING
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
SHORT
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
INTEGER, LONG, DECIMAL, FLOAT, DOUBLE, STRING
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
INTEGER
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
LONG, DECIMAL, FLOAT, DOUBLE, STRING
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
LONG
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
DECIMAL, FLOAT, DOUBLE, STRING
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
DECIMAL
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
FLOAT, DOUBLE, STRING
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
FLOAT
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
DOUBLE, STRING
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
DOUBLE
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
STRING
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
DATE
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
DATE_TIME
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
STRING
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
BYTE, SHORT, INTEGER, LONG, DECIMAL, FLOAT, DOUBLE
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
ANY_TYPE
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
BYTE, SHORT, INTEGER, LONG, DECIMAL, FLOAT, DOUBLE, STRING
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "tab:Equivalencia-de-Subtipos-Metamodelo"

\end_inset

Equivalencia de Subtipos en el Metamodelo
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Evaluación de Identificadores
\begin_inset CommandInset label
LatexCommand label
name "subsec:Algoritmo-para-Evaluacion-Identificadores"

\end_inset


\end_layout

\begin_layout Standard
El algoritmo para la Evaluación de Identificadores compara el nombre de
 una operación 
\begin_inset Formula $op_{P}$
\end_inset

 con el nombre de una operación 
\begin_inset Formula $op_{C}$
\end_inset

.
 Los pasos principales para la comparación son:
\end_layout

\begin_layout Itemize

\emph on
Separación de Términos
\emph default
: Los identificadores se restringen normalmente a secuencias de una o más
 letras en código ASCII, caracteres numéricos y guiones bajos ('_') o medios
 ('-').
 El paso de 
\emph on
Separación de Términos
\emph default
 analiza los identificadores reconociendo términos potenciales (secuencias
 y/o cambios de mayúsculas a minúsculas y viceversa, caracteres especiales).
 Luego WordNet es utilizado para analizar todos los potenciales términos
 y determinar la separación de palabras más adecuada.
 Cuando un identificador no sigue estrictamente las convenciones de nombrado,
 algunas suposiciones son realizadas, por ejemplo una secuencia de mayúsculas
 podría representar un acrónimo, al que se le buscará una definición.
 Sea el caso de la palabra 
\emph on
SQLLogin
\emph default
, que no cumple con las convenciones de nombrado de Java.
 El análisis preliminar de términos representativos diría que hay dos secuencias
 factibles, 
\emph on
SQLL
\emph default
 y 
\emph on
ogin.
 
\emph default
De acuerdo con el algoritmo de 
\emph on
Separación de Términos 
\emph default
las secuencias previamente nombradas serían analizadas de esta manera con
 WordNet.
 Como no son palabras válidas, el algoritmo analiza la última mayúscula
 junto con la secuencia de minúsculas 
\emph on
L
\emph default
 + 
\emph on
ogin = Login.
 
\emph default
Como esta palabra si existe en el diccionario WordNet, 
\emph on
SQL
\emph default
 es considerada un acrónimo para su análisis (que actualmente significa
 Structured Query Language).
 
\end_layout

\begin_layout Itemize

\emph on
Eliminación de Stop Words: 
\emph default
es el nombre que reciben las palabras sin significado tales como artículos,
 pronombres, preposiciones, etc.
 Estas palabras son filtradas antes o después del procesamiento de datos
 (texto) en lenguaje natural 
\begin_inset CommandInset citation
LatexCommand cite
key "Casamayor10"

\end_inset

, por no ayudar a determinar la semántica de la operación, siendo irrelevantes
 para determinar si un conjunto de términos es similar a otro.
 El paso de 
\emph on
Eliminación de Stop Words
\emph default
 toma una lista de términos y elimina cada ocurrencia de una palabra pertenecien
te a la lista de stop words.
 En 
\begin_inset CommandInset citation
LatexCommand cite
key "DeRenzis13"

\end_inset

, se determinó que la lista de stop words debía ser extendida agregando
 el alfabeto completo (mayúsculas y minúsculas) y también los dígitos.
 La razón es que el vector resultante del algoritmo de separación de términos
 puede incluir letras y/o dígitos como términos individuales.
 Ejemplos comunes del uso de dígitos en los identificadores son: 4 (four)
 y 2 (two), para referirse a las palabras for y to respectivamente, por
 tener una pronunciación parecida en el idioma inglés.
\end_layout

\begin_layout Itemize

\emph on
Stemming: 
\emph default
es el proceso de reducir un término a su forma base, raíz o 
\emph on
stem.
 
\emph default
Inicialmente, se consideró la utilización de un stemmer estándar (frecuentemente
 usado en Recuperación de Información) como el Algoritmo de Porter
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "Willett06"

\end_inset

, pero dichos stemmers pueden generar datos semánticamente incorrectos,
 siendo los principales errores el 
\emph on
overstemming
\emph default
 y 
\emph on
understemming
\emph default
.
 
\emph on
Overstemming
\emph default
 es un error en el que dos palabras derivan en la misma raíz (
\emph on
stem
\emph default
), pero no deberían ya que son semánticamente diferentes (falso positivo).
 
\emph on
Understemming
\emph default
 es un error en el que dos palabras deben derivar en la misma raíz, pero
 derivan en raíces distintas (falso negativo).
 El algoritmo de 
\emph on
Stemming
\emph default
 utilizado recibe como entrada una lista de términos, y para cada término
 en la lista, se verifica si pertenece al diccionario de WordNet.
 Si eso ocurre, se agrega su stem a la lista resultante; en caso contrario,
 se agrega el término original que puede ser un acrónimo o abreviatura.
\end_layout

\begin_layout Itemize

\emph on
Comparación semántica de listas de términos
\emph default
: luego de generar las listas de términos de 
\begin_inset Formula $op_{P}$
\end_inset

 y 
\begin_inset Formula $op_{C}$
\end_inset

 (con sus respectivos acrónimos y 
\emph on
stems
\emph default
) se extrae la información para la comparación semántica, que incluye: (1)
 Términos idénticos (exactos) entre 
\begin_inset Formula $op_{P}$
\end_inset

 y 
\begin_inset Formula $op_{C}$
\end_inset

; (2) Sinónimos de los términos de 
\begin_inset Formula $op_{P}$
\end_inset

 que pertenezcan a la lista de términos de 
\begin_inset Formula $op_{C}$
\end_inset

; (3) Hiperónimos (padres) de los términos de 
\begin_inset Formula $op_{P}$
\end_inset

 que pertenezcan a 
\begin_inset Formula $op_{C}$
\end_inset

; y (4) Hipónimos (hijos) de los términos de 
\begin_inset Formula $op_{P}$
\end_inset

 que pertenezcan a la lista de 
\begin_inset Formula $op_{C}$
\end_inset

.
 Para evaluar sinónimos, hiperónimos e hipónimos, se consideraron los siguientes
 aspectos.
 En primer lugar, se utilizó un nivel único de hipo/hiperonimia para evitar
 alterar demasiado el significado de las palabras.
 Por ejemplo, 
\emph on
house
\emph default
 es un hipónimo de primer nivel de construcción (por lo tanto, esa relación
 es considerada por el algoritmo).
 Segundo, se considera la sinonimia total, donde dos términos son sinónimos
 si son intercambiables en el mismo contexto sin afectar la semántica.
 Por ejemplo, 
\emph on
land (tierra)
\emph default
 y 
\emph on
ground (suelo)
\emph default
 son sinónimos totales ya que son semánticamente intercambiables.
\end_layout

\begin_layout Itemize

\emph on
Cálculo de compatibilidad de nombres: 
\emph default
en este punto, con la información obtenida se puede calcular la compatibilidad
 de nombres de acuerdo a la Fórmula
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "eq:nameComp"

\end_inset

, donde 
\begin_inset Formula $terms$
\end_inset

 es el total de términos entre 
\begin_inset Formula $op_{P}$
\end_inset

 y 
\begin_inset Formula $op_{C}$
\end_inset

 (terms = #({termsOpR} ∪ {termsOpS})), 
\begin_inset Formula $exact$
\end_inset

 es el total de términos idénticos, y 
\begin_inset Formula $sin$
\end_inset

, 
\begin_inset Formula $hipo$
\end_inset

 e 
\begin_inset Formula $hiper$
\end_inset

 son los totales de sinónimos, hipónimos e hiperónimos respectivamente.
 Luego, este valor es discretizado para corresponderse con las condiciones
 para nombres de operación.
 A los hiperónimos e hipónimos se le da la mitad del peso de los términos
 exactos y sinónimos, ya que los primeros implican una semántica ligeramente
 diferente entre los términos del segundo.
\end_layout

\begin_layout Standard

\size small
\lang english
\begin_inset Formula 
\begin{equation}
compNombres=\frac{exact+sin+0.5*(hipo+hiper)}{terms-sin}\label{eq:nameComp}
\end{equation}

\end_inset


\end_layout

\begin_layout Subsection
Evaluación de Parámetros
\begin_inset CommandInset label
LatexCommand label
name "subsec:Parámetros"

\end_inset

 
\end_layout

\begin_layout Standard
Para la comparación de parámetros, la cantidad de parámetros no constituye
 un factor de incompatibilidad cuando 
\begin_inset Formula $op_{P}\in I_{P}$
\end_inset

 tiene menos parámetros que una operación 
\begin_inset Formula $op_{C}\in I_{C}$
\end_inset

.
 Ambas operaciones aún son potencialmente compatibles si los campos de algún
 parámetro complejo resultan compatibles con los parámetros simples en su
 contra parte.
 El algoritmo de análisis de compatibilidad de parámetros entre las dos
 operaciones se basa en calcular tres matrices y realizar dos cálculos que
 maximizan los resultados obtenidos: 
\end_layout

\begin_layout Itemize
La matriz de compatibilidad de tipos (T): se utilizan las nociones de equivalenc
ias de tipos de datos y subtipificación detalladas en la Tabla 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Equivalencia-de-Subtipos"

\end_inset

, para evaluar tipos de parámetros.
 El objetivo de la matriz 
\begin_inset Formula $T$
\end_inset

 es almacenar la relación entre todos los pares de tipos de parámetros en
 
\begin_inset Formula $op_{P}$
\end_inset

 y 
\begin_inset Formula $op_{C}$
\end_inset

.
\end_layout

\begin_layout Itemize
La matriz de compatibilidad de nombres (N): la matriz 
\begin_inset Formula $N$
\end_inset

 contiene los valores de compatibilidad entre el nombre de cada parámetro
 de 
\begin_inset Formula $op_{P}$
\end_inset

 y cada parámetro de 
\begin_inset Formula $op_{C}$
\end_inset

.
 La lógica subyacente a este paso es similar a la matriz de tipos.
 La celda 
\begin_inset Formula $N_{ij}$
\end_inset

 de la matriz de nombres 
\begin_inset Formula $N$
\end_inset

 contiene el valor de compatibilidad entre el nombre del i-ésimo parámetro
 de 
\begin_inset Formula $op_{P}$
\end_inset

 y el j-ésimo parámetro de 
\begin_inset Formula $op_{C}$
\end_inset

.
\end_layout

\begin_layout Itemize
La matriz de compatibilidad (C): la matriz 
\begin_inset Formula $C$
\end_inset


\emph on
 
\emph default
se genera a partir de las matrices 
\begin_inset Formula $T$
\end_inset

 y 
\begin_inset Formula $N$
\end_inset


\emph on
.
 
\emph default
El objetivo de esta matriz es almacenar el valor de compatibilidad entre
 todos los pares de parámetros de 
\begin_inset Formula $op_{P}$
\end_inset

 y 
\begin_inset Formula $op_{C}$
\end_inset

, considerando aspectos estructurales (resumidos en la matriz 
\begin_inset Formula $T$
\end_inset

) y semánticos (resumidos en la matriz 
\begin_inset Formula $N$
\end_inset

).
 La celda 
\begin_inset Formula $C_{ij}$
\end_inset

 de la matriz 
\begin_inset Formula $C$
\end_inset

 contiene el producto entre 
\begin_inset Formula $T_{ij}$
\end_inset

 y 
\begin_inset Formula $N_{ij}$
\end_inset

 – luego: 
\begin_inset Formula $C_{ij}=T_{ij}*N_{ij}$
\end_inset

.
 
\end_layout

\begin_layout Itemize

\emph on
Maximización de mapeo de parámetros: 
\emph default
Luego de calcular la matriz 
\begin_inset Formula $C$
\end_inset

, se debe seleccionar el mejor mapeo de parámetros entre todas las posibles
 combinaciones de pares de parámetros – es decir, la asignación de parámetros
 que maximiza la compatibilidad entre 
\begin_inset Formula $op_{P}$
\end_inset

 y 
\begin_inset Formula $op_{C}$
\end_inset

.
 Cada posible asignación de parámetros consiste en tomar cada fila de la
 matriz 
\begin_inset Formula $C$
\end_inset

 y elegir una columna, con la condición de no utilizar cada columna más
 de una vez (no asignar más de una vez cada parámetro).
 Luego, esto asegura un mapeo uno-a-uno entre los parámetros de 
\begin_inset Formula $op_{P}$
\end_inset

 y 
\begin_inset Formula $op_{C}$
\end_inset

.
 El mapeo con el mayor valor total (sumando cada celda elegida) será el
 más compatible.
 Dicho mapeo se obtiene aplicando el método Hungarian
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "Kuhn55"

\end_inset

, que modela el problema de la asignación como una matriz de costos de 
\begin_inset Formula $n*m$
\end_inset

 – en este caso 
\begin_inset Formula $n$
\end_inset

 y 
\begin_inset Formula $m$
\end_inset

 son los números de parámetros de 
\begin_inset Formula $op_{P}$
\end_inset

 y 
\begin_inset Formula $op_{C}$
\end_inset

 respectivamente.
\end_layout

\begin_layout Itemize
C
\emph on
álculo de Compatibilidad de Parámetros: 
\emph default
se calcula un valor mediante la ya calculada matriz de compatibilidad 
\begin_inset Formula $C$
\end_inset

, analizando la misma en busca de la correspondencia que maximice el valor
 de compatibilidad de acuerdo a la Fórmula
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "eq:compParam"

\end_inset

.
\end_layout

\begin_deeper
\begin_layout Standard

\size small
\lang english
\begin_inset Formula 
\begin{equation}
compParam=\frac{\sum C_{ij}}{\#(parCamposOpc)}\text{ −}penalizacion\text{ ∗ }\#(paramNoUsadosOpc)\label{eq:compParam}
\end{equation}

\end_inset


\size default
\lang spanish
 Donde 
\begin_inset Formula $C$
\end_inset

 es la matriz de compatibilidad que maximiza los valores de compatibilidad,
 y 
\begin_inset Formula $penalizacion$
\end_inset

 es un valor que depende de si los parámetros de 
\begin_inset Formula $op_{P}$
\end_inset

 y 
\begin_inset Formula $op_{C}$
\end_inset

 son de tipos simples o complejos, y de un valor configurable que penaliza
 los parámetros no usados.
 Esto es, si la 
\begin_inset Formula $op_{P}$
\end_inset

 consta de un parámetro complejo y la 
\begin_inset Formula $op_{C}$
\end_inset

 es una lista de parámetros simples o viceversa entonces la penalización
 tiene un coste mayor que si ambas interfaces tuvieran una lista de parámetros
 simples o un único parámetro complejo.
 Además, podrían penalizarse los parámetros extra a través del valor.
 Por último, este valor es discretizado para corresponderse con las condiciones
 para parámetros.
\end_layout

\end_deeper
\begin_layout Paragraph
Parámetros complejos
\begin_inset Newline newline
\end_inset


\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
El algoritmo de análisis de compatibilidad de parámetros para tipos de datos
 complejos entre 
\begin_inset Formula $op_{P}$
\end_inset

 y 
\begin_inset Formula $op_{C}$
\end_inset

 consiste en determinar tres valores:
\end_layout

\begin_layout Enumerate
Valor de compatibilidad de los campos (basado en nombres y tipos) que componen
 los tipos de datos complejos de los parámetros de 
\begin_inset Formula $op_{P}$
\end_inset

 y 
\begin_inset Formula $op_{C}$
\end_inset

.
 
\end_layout

\begin_layout Enumerate
Valor de compatibilidad de los nombres de los tipos de datos complejos de
 los parámetros de 
\begin_inset Formula $op_{P}$
\end_inset

 y 
\begin_inset Formula $op_{C}$
\end_inset

.
 
\end_layout

\begin_layout Enumerate
Valor final de compatibilidad entre los tipos de datos complejos de los
 parámetros de 
\begin_inset Formula $op_{P}$
\end_inset

 y 
\begin_inset Formula $op_{C}$
\end_inset

 en base a los valores de compatibilidad obtenidos en los puntos (1) y (2).
 
\end_layout

\begin_layout Paragraph

\series bold
Compatibilidad de campos
\begin_inset Newline newline
\end_inset


\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Para poder realizar una comparación entre parámetros complejos, es necesario
 conocer la estructura interna de cada uno de ellos y realizar una comparación
 entre los nombres y tipos de cada uno de los campos que lo componen.
 Si la cantidad de campos del parámetro complejo de la 
\begin_inset Formula $op_{P}$
\end_inset

 es menor a la cantidad de campos del parámetro complejo de la 
\begin_inset Formula $op_{C}$
\end_inset

 entonces se puede proceder con la comparación entre ellos.
\end_layout

\begin_layout Standard
En caso contrario no se puede avanzar con la comparación, puesto que quedarían
 campos del tipo complejo en 
\begin_inset Formula $op_{P}$
\end_inset

 que no se podrían instanciar con ningún campo en 
\begin_inset Formula $op_{C}$
\end_inset

.
 El algoritmo para el análisis de compatibilidad de los campos es análogo
 al que se presenta en la Sección
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Evaluación-del-Retorno"

\end_inset

 para el análisis de nombres de los tipos de retorno.
 
\end_layout

\begin_layout Paragraph

\series bold
Compatibilidad de nombres de parámetros
\begin_inset Newline newline
\end_inset


\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Se compara directamente parámetro contra parámetro o campo contra campo
 en caso de que se traten tipos complejos.
 En ambas situaciones también se tiene en cuenta que la cantidad de parámetros
 (o campos del tipo complejo) de la 
\begin_inset Formula $op_{P}$
\end_inset

 sea menor o igual a la cantidad de parámetros (o campos del tipo complejo)
 de la 
\begin_inset Formula $op_{C}$
\end_inset

.
\end_layout

\begin_layout Standard
Una vez determinado el caso que corresponda, la comparación entre los nombres
 propiamente dichos se realiza de acuerdo al algoritmo de comparación de
 identificadores presentado en la Sección 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Algoritmo-para-Evaluacion-Identificadores"

\end_inset

.
\end_layout

\begin_layout Paragraph
Comparación de parámetros simples contra complejos 
\begin_inset Newline newline
\end_inset


\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Cuando se comparan dos operaciones donde una presenta una lista de parámetros
 de tipo primitivo y la otra un único parámetro complejo, el algoritmo de
 análisis de compatibilidad aplana
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "Budd81"

\end_inset

 el parámetro de tipo complejo y compara los campos con los parámetros primitivo
s.
 El aplanado (
\emph on
flatten
\emph default
) es un operador de mutación de interfaces que permite des encapsular los
 tipos de datos complejos o registros en una lista de sus tipos componentes.
 Por lo tanto, el análisis de compatibilidad se reduce al mismo caso que
 cuando se comparan operaciones con listas de parámetros primitivos, sin
 tener en cuenta el nombre del tipo complejo.
\end_layout

\begin_layout Paragraph
Valor final de compatibilidad de parámetros 
\begin_inset Newline newline
\end_inset


\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
El valor de compatibilidad de parámetros de 
\begin_inset Formula $op_{P}$
\end_inset

 y 
\begin_inset Formula $op_{C}$
\end_inset

 se realiza teniendo en cuenta el valor obtenido con la compatibilidad de
 nombres y de tipos de todos los parámetros de las operaciones de acuerdo
 a la siguiente Fórmula: 
\begin_inset Newline newline
\end_inset


\size small

\begin_inset Formula 
\begin{equation}
compParamFinal=compNombres*(1+compTipos)\label{eq:compParamFinal}
\end{equation}

\end_inset


\size default
 
\end_layout

\begin_layout Paragraph
Generación de la Sugerencia de Correspondencias de Parámetros 
\begin_inset Newline newline
\end_inset


\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Una vez obtenidos los mapeos de parámetros, de acuerdo al mejor mapeo encontrado
 para cada operación, se genera una sugerencia de correspondencias de parámetros.
 Esto es, se almacena aquella correspondencia que maximiza la compatibilidad
 entre un par de operaciones (
\begin_inset Formula $op_{P}$
\end_inset

 , 
\begin_inset Formula $op_{C}$
\end_inset

).
 Luego, este procedimiento debe ser extendido para contemplar las mejoras
 realizadas al análisis de compatibilidad de interfaces.
 Partiendo de una matriz de compatibilidad C ya calculada, cada mapeo posible
 consiste en tomar cada fila (parámetro/campo de 
\begin_inset Formula $op_{P}$
\end_inset

) y elegir una columna (un parámetro/campo de 
\begin_inset Formula $op_{C}$
\end_inset

) para ese elemento.
 Luego, para cada posible asignación de parámetros entre 
\begin_inset Formula $op_{P}$
\end_inset

 y 
\begin_inset Formula $op_{C}$
\end_inset

, se calcula el valor de compatibilidad que posee esta asignación.
 Este es el valor que corresponde al mapeo dentro de la matriz de compatibilidad
 de parámetros.
 El resultado final de cada posible combinación de parámetros es la suma
 de todos los pesos de los mapeos que componen la misma.
 Luego, la asignación que posea el mayor valor, será la más compatible.
 
\end_layout

\begin_layout Subsection
Evaluación del Retorno
\begin_inset CommandInset label
LatexCommand label
name "subsec:Evaluación-del-Retorno"

\end_inset


\end_layout

\begin_layout Standard
Si la operación requerida 
\begin_inset Formula $op_{P}$
\end_inset

 ∈ 
\begin_inset Formula $I_{P}$
\end_inset

 y la operación del servicio 
\begin_inset Formula $op_{C}$
\end_inset

∈ 
\begin_inset Formula $I_{C}$
\end_inset

 tienen tipos de retorno complejos, se realiza un análisis exhaustivo teniendo
 en cuenta la parte semántica de cada retorno.
 Implicando un análisis estructural y semántico del identificador y los
 campos que componen los tipos complejos.
 El algoritmo de evaluación de retornos complejos compara los tipos de retorno
 de una operación de la interfaz requerida 
\begin_inset Formula $op_{P}$
\end_inset

 ∈ 
\begin_inset Formula $I_{P}$
\end_inset

 y una operación de la interfaz del servicio candidato 
\begin_inset Formula $op_{C}$
\end_inset

 ∈ 
\begin_inset Formula $I_{C}$
\end_inset

 y realiza distintas evaluaciones: 
\end_layout

\begin_layout Enumerate
Compatibilidad de campos comparando los tipos y nombres de cada uno (todos
 contra todos) y maximizando el valor de compatibilidad.
\end_layout

\begin_layout Enumerate
Compatibilidad de los nombres del tipo complejo de retorno en 
\begin_inset Formula $op_{P}$
\end_inset

 y 
\begin_inset Formula $op_{C}$
\end_inset

.
\end_layout

\begin_layout Enumerate
Valor de compatibilidad final entre los tipos de retorno complejo de 
\begin_inset Formula $op_{P}$
\end_inset

 y 
\begin_inset Formula $op_{C}$
\end_inset

 en base a las determinaciones obtenidas en los puntos anteriores.
\end_layout

\begin_layout Standard
El análisis del tipo de retorno primero verifica si el tipo de retorno de
 
\begin_inset Formula $op_{P}$
\end_inset

 y 
\begin_inset Formula $op_{C}$
\end_inset

 es idéntico.
 En tal caso, la compatibilidad del tipo de retorno es exacta.
 Si los tipos de retornos son diferentes, se analiza si el tipo de retorno
 de 
\begin_inset Formula $op_{P}$
\end_inset

 es subtipo del tipo de retorno de 
\begin_inset Formula $op_{C}$
\end_inset

 – de acuerdo a los criterios de subtipificación para el lenguaje Java (Tabla
 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Equivalencia-de-Subtipos"

\end_inset

).
 Si se cumple alguno de esos criterios entonces la compatibilidad del tipo
 de retorno es equivalente.
 Si ninguna de las condiciones anteriores se cumple, entonces al menos uno
 de los retornos es complejo y se requiere un análisis exhaustivo.
 
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
La Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "Evaluación de tipo de retorno complejo"

\end_inset

 resume los pasos para el análisis de tipos de retorno complejos.
 Los mismos se detallan a continuación.
\end_layout

\begin_layout Plain Layout
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename ImgChapter2/EvaluacionDeTipoDeRetornoComplejo.PNG
	width 120col%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "Evaluación de tipo de retorno complejo"

\end_inset

Evaluación de tipo de retorno complejo
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Comparación de tipos de retorno complejos 
\begin_inset CommandInset label
LatexCommand label
name "par:Comparación-de-tipos"

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Para poder realizar una comparación entre tipos de retorno complejo, en
 un principio es necesario conocer la estructura interna de cada uno de
 ellos y realizar una comparación del tipo “todos contra todos” entre los
 nombres y tipos de cada uno de los campos que lo componen.
 La 
\emph on
compatibilidad de nombres para tipos de retornos complejos
\emph default
 se evalúa utilizando el algoritmo de evaluación de identificadores presentado
 en la Sección 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Algoritmo-para-Evaluacion-Identificadores"

\end_inset

.
 Si la cantidad de campos en 
\begin_inset Formula $op_{P}$
\end_inset

 es menor o igual a la cantidad de campos en 
\begin_inset Formula $op_{C}$
\end_inset

 entonces se puede proceder con la comparación entre ellos.
 En caso contrario se consideran incompatibles, ya que quedarían campos
 requeridos en 
\begin_inset Formula $op_{P}$
\end_inset

 que no se podrían corresponder con ninguno de la operación candidata 
\begin_inset Formula $op_{C}$
\end_inset

.
 
\end_layout

\begin_layout Paragraph
Comparación de retorno simple contra retorno complejo
\begin_inset Newline newline
\end_inset


\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Para realizar el análisis de un tipo de retorno simple respecto a uno complejo,
 es necesario aplanar este último, trabajando directamente con los campos
 que lo componen.
 Luego se compara directamente el tipo de dato del retorno simple contra
 todos los tipos de datos de los campos del complejo, seleccionando aquel
 que maximice el valor de compatibilidad entre los retornos.
 Nótese que el análisis en este caso es puramente estructural, ya que el
 tipo de retorno simple no contiene información semántica que pueda ser
 analizada.
\end_layout

\begin_layout Paragraph
Valor final de compatibilidad de retorno
\begin_inset Newline newline
\end_inset


\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
El valor final de compatibilidad entre los tipos de retorno complejo para
 
\begin_inset Formula $op_{P}$
\end_inset

 y 
\begin_inset Formula $op_{C}$
\end_inset

 se calcula de acuerdo a la Fórmula 3.2 teniendo en cuenta el valor obtenido
 comparando campos y el valor de compatibilidad de nombres de los tipos
 propiamente dichos.
\begin_inset Newline newline
\end_inset


\size small

\begin_inset Formula 
\begin{equation}
compRetComplejo=\frac{compCampos*(1+compNombres)}{2}\label{eq:compRetComplejo}
\end{equation}

\end_inset


\size default
Donde 
\emph on
compCampos
\emph default
 representa el valor de compatibilidad estructural y semántica entre los
 campos del tipo complejo, y 
\emph on
compNombres
\emph default
 representa el valor de compatibilidad semántica de los nombres de los tipos
 de retorno.
 A este último valor se le suma 1 ya que se pretende que no se genere una
 incompatibilidad sólo por la ausencia de correspondencia semántica entre
 nombres.
 Luego, se divide el valor final por 2 para normalizar el valor de retorno
 complejo.
\end_layout

\begin_layout Paragraph
Distancia de Adaptabilidad
\begin_inset Newline newline
\end_inset


\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Considerando las condiciones semántico-estructurales para compatibilidad
 de interfaces, es posible definir un valor numérico que refleje el esfuerzo
 de adaptación requerido para integrar un servicio candidato en una Aplicación
 Orientada a Servicios.
 Dicho valor se denomina 
\emph on
Distancia de Adaptabilidad 
\emph default
y se calcula de acuerdo a la Fórmula
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "eq:adapGap"

\end_inset

, donde 
\begin_inset Formula $N$
\end_inset

 es el tamaño de la interfaz 
\begin_inset Formula $I_{P}$
\end_inset

 y 
\begin_inset Formula $AdapMap$
\end_inset

 es el mejor valor entre los valores de equivalencia 
\begin_inset Formula $adaptValue(op_{P},op_{C})$
\end_inset

.
\end_layout

\begin_layout Standard

\size small
\lang english
\begin_inset Formula 
\begin{equation}
DistAdap(I_{P},I_{C})=\frac{\sum_{i=1}^{N}(Min(AdapMap(op_{Pi},I_{C})))}{N}+1\label{eq:adapGap}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
El valor de adaptabilidad (
\begin_inset Formula $adapValue$
\end_inset

) entre una operación 
\begin_inset Formula $op_{P}$
\end_inset

 y una operación 
\begin_inset Formula $op_{C}$
\end_inset

 potencialmente compatibles se calcula de acuerdo a la Fórmula
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "eq:adapValue"

\end_inset

, donde 
\begin_inset Formula $R$
\end_inset

, 
\begin_inset Formula $E$
\end_inset

 son los valores de equivalencia estructural para Retorno y Excepciones,
 y 
\begin_inset Formula $compNombre$
\end_inset

 y 
\begin_inset Formula $compParam$
\end_inset

 son los valores de equivalencia semántico-estructural para Nombres y Parámetros.
\end_layout

\begin_layout Standard

\size small
\lang english
\begin_inset Formula 
\begin{equation}
adapValue(op_{P},op_{C})=R+E-(compNombre+compParam)\label{eq:adapValue}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Cuanto mayor sea el esfuerzo de adaptación necesario para integrar un servicio
 candidato, mayor será el valor de la 
\emph on
distancia de adaptabilidad.

\emph default
 En el caso en que todas las operaciones requeridas tengan una equivalencia
 
\emph on
exacta, 
\emph default
la distancia de adaptabilidad entre 
\begin_inset Formula $I_{P}$
\end_inset

 e 
\begin_inset Formula $I_{C}$
\end_inset

 es cero.
 Aunque esto puede parecer una correspondencia perfecta entre las interfaces,
 inicialmente significa que 
\begin_inset Formula $I_{P}$
\end_inset

 está incluida en 
\begin_inset Formula $I_{C}$
\end_inset

, y que la correspondencia entre ambas requiere de un esfuerzo de adaptación
 nulo o trivial – por ejemplo, conversiones (
\emph on
casting
\emph default
) entre tipos compatibles sin pérdida de precisión.
 
\end_layout

\begin_layout Standard
La fórmula de 
\emph on
distancia de adaptabilidad
\emph default
 incorpora la información estructural y semántica extraída de las interfaces
 en un valor numérico preciso, que refleja adecuadamente el esfuerzo de
 adaptación e integración del servicio candidato.
 Esto hace que el Método de 
\emph on
Selección
\emph default
 de Servicios pueda ser considerado como 
\shape slanted
orientado a la adaptabilidad
\shape default
\emph on
.
\end_layout

\begin_layout Section
Open Challenges
\end_layout

\begin_layout Standard
A lo largo del presente capítulo se pudieron observar una serie de oportunidades
 de mejora:
\end_layout

\begin_layout Standard
El propósito y funcionamiento del Metamodelo fue diseñado basándose en los
 estándares SoaML, WSDL 2.0 y WADL.
 Con el fin de no tener que realizar las instanciaciones de las diferentes
 clases del Metamodelo manualmente, una pieza de software fue provista para
 poder realizar instancias del Metamodelo basándose en especificaciones
 WSDL ya existentes.
 Se analizó que era necesario otra pieza de software conversor que acepte
 estándares de descripción de Servicios Web más modernos, como OpenAPI,
 y genere las instancias del Metamodelo análogas correspondientes.
 
\end_layout

\begin_layout Standard
El Metamodelo utilizado carece de un proceso automatizado de selección,
 siendo el ingeniero el que tiene que desarrollar éste algoritmo.
 Así mismo el ingeniero experto también debe decidir como resolver si en
 un experimento existiesen varios servicios candidatos (
\begin_inset Formula $I_{C}$
\end_inset

) en los cuales la evaluación con respecto al servicio propuesto (
\begin_inset Formula $I_{P}$
\end_inset

) toma el mismo valor de distancia de Adaptabilidad, generando la siguiente
 incógnita ¿Como seleccionar el correspondiente servicio adecuado entre
 ellos?.
 Por consiguiente, es necesario automatizar este proceso, estandarizándolo
 dentro de la metodología Razonamiento Basado en Casos.
\end_layout

\begin_layout Standard
Cada experimento posee un entorno de conocimiento aislado y volátil a lo
 largo de los experimentos, es decir, las instancias del Metamodelo pertenecient
es al dataset, o Base de Conocimientos, deben ser generadas antes de realizar
 cada experimento, significando que cada servicio que se requiera en el
 dataset debe ser instanciado por el Software conversor anteriormente mencionado
 antes de cada experimento.
 Esto, además de hacer que cada prólogo al experimento sea repetitivo, no
 aprovecha ni reutiliza la información obtenida de cada ejecución, razón
 por la cual es necesario almacenar esta base de conocimientos en un sistema
 persistente, con el fin de ahorrar tiempo en cada ejecución y nutrirse
 de experiencia obtenida de experiencias pasadas.
\end_layout

\end_body
\end_document
