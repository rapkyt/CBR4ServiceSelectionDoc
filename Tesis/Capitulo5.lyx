#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass myBook
\begin_preamble
\usepackage{fancyhdr}
% Added by lyx2lyx
\renewcommand{\textendash}{--}
\renewcommand{\textemdash}{---}
\end_preamble
\use_default_options false
\maintain_unincluded_children false
\language spanish
\language_package babel
\inputencoding auto
\fontencoding default
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 0
\use_package cancel 0
\use_package esint 1
\use_package mathdots 0
\use_package mathtools 0
\use_package mhchem 0
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 2
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Conclusiones y Trabajo Futuro
\begin_inset CommandInset label
LatexCommand label
name "cap:concYTrabajosFut"

\end_inset


\end_layout

\begin_layout Section
Introducción
\begin_inset CommandInset label
LatexCommand label
name "sec:Generacion-de-consultas"

\end_inset


\end_layout

\begin_layout Standard
En la presente tesis se profundizó acerca del Método de Evaluación y Selección
 de Servicios Web, que tiene como objetivo asistir a los ingenieros de software
 en la construcción de Aplicaciones Orientadas a Servicios.
 En particular, se mapearon los pasos del proceso dentro de la metodología
 Razonamiento Basado en Casos, incorporando un mecanismo de aprendizaje
 semi-automático que mejora su performance adquiriendo información a partir
 del uso además de estandarizar y automatizar el proceso, lo que facilita
 las tareas de evaluación y selección de Servicios Web en base a la descripción
 de las necesidades de un ingeniero software.
 
\end_layout

\begin_layout Standard
Actualmente, los servicios están siendo fuertemente considerados como la
 mejor elección para la integración transparente e inter-organizacional
 de activos de software.
 Sin embargo, los distintos problemas identificados evidencian la necesidad
 de mecanismos que soporten la selección de servicios.
 Los consumidores de servicios primero deben estudiar los servicios candidatos,
 sus funcionalidades, y las operaciones soportadas, para luego identificar
 la forma de invocación, la interconexión de operaciones, y los mapeos de
 mensajes.
 Sumado a esto, los documentos WSDL y OpenAPI en general carecen de información
 significativa para soportar este proceso, debido a la proliferación de
 los Servicios Web 
\emph on
code-first
\emph default
 
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "mateos2011detecting"

\end_inset

, cuyas especificaciones se generan de manera automática, disminuyendo su
 expresividad y por ende la precisión de la búsqueda.
 
\begin_inset Newline newline
\end_inset

En este capítulo se analiza en la Sección 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Objetivos-Alcanzados"

\end_inset

 la consecución de los objetivos planteados en el Capítulo
\begin_inset space ~
\end_inset

1, en función del desarrollo del trabajo que se describe en esta tesis.
 Luego en la Sección 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Trabajo-Futuro"

\end_inset

 se identifican potenciales líneas futuras de acción que pueden complementar
 el trabajo que ha sido desarrollado.
\end_layout

\begin_layout Section
Objetivos Alcanzados
\begin_inset CommandInset label
LatexCommand label
name "sec:Objetivos-Alcanzados"

\end_inset


\end_layout

\begin_layout Standard
Retomando el objetivo general de esta tesis:
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Box Boxed
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "c"
use_parbox 1
use_makebox 0
width "80text%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\noindent
\align center

\emph on
“Definir e implementar un proceso de evaluación y selección de Servicios
 Web utilizando Razonamiento Basado en Casos (CBR)”
\end_layout

\end_inset

 
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
En este sentido, se propuso que la contribución materialice una extensión
 del proceso de selección y de su herramienta de soporte, enfocando en que
 las especificaciones de los Servicios Web sean independientes de la tecnología
 y que puedan abarcar servicios heterogéneos.
 Para ello se utilizó un Metamodelo SoaML, que posee un conjunto de estándares
 para descripción de contratos/responsabilidades de Servicios Web, dentro
 de la metodología Razonamiento Basado en Casos.
 En el contexto de este objetivo general, destacan distintos objetivos específic
os que se detallan a continuación:
\end_layout

\begin_layout Paragraph*
Objetivo 1: Definir un proceso de evaluación de servicios utilizando CBR.
\end_layout

\begin_layout Standard
A lo largo de esta tesis se logró trazar un paralelo entre el problema de
 descubrimiento, selección y evaluación de servicios
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "Garriga2018isf"

\end_inset

 y los pasos de la metodología CBR, conocidos como las cuatro R
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "aamodt1994case"

\end_inset

: (1) Recuperar los casos más similares a un problema; (2) Reusar la información
 y el conocimiento disponible para intentar resolver el problema, (3) Revisar
 la solución propuesta si fuera necesario, y (4) Retener las partes de esta
 experiencia que sirvan para aprendizaje y utilización para resolución de
 problemas futuros, aumentando la eficacia en comparación a la ejecución
 manual de las anteriores versiones de la Herramienta de Evaluación de Servicios
 Web.
\end_layout

\begin_layout Standard
Además, como se mencionó en el Capítulo 3, resultaba necesario contar con
 una especificación de contratos de Servicios Web que sea independiente
 de cualquier tecnología de implementación.
 Por este motivo el Metamodelo de descripciones de Servicios Web presentado
 en el Capítulo 2 fue extendido, incorporándolo en una nueva estructura
 llamada “Caso”.
 
\end_layout

\begin_layout Paragraph*
Objetivo 2: Desarrollar los componentes necesarios para la evaluación de
 servicios heterogéneos.
\end_layout

\begin_layout Standard
Al contar con el Metamodelo desarrollado, resultó necesario que la evaluación
 de servicios candidatos especificados bajo el estándar OpenAPI/Swagger
 se realice en función de instancias del Metamodelo.
 Para ello, se diseño y desarrolló un componente conversor que recibe como
 entrada una especificación OpenAPI/Swagger (generalmente un archivo tipo
 JSON) y devuelve como salida una instancia del Metamodelo.
 Contar con este conversor nos permitió trabajar tanto con servicios SOAP
 como con servicios REST de una manera transparente.
\end_layout

\begin_layout Standard
El primer beneficio concreto de contar con el componente conversor se obtuvo
 a la hora de realizar la evaluación experimental, ya que fueron generadas
 las instancias correspondientes del Metamodelo para las 550 especificaciones
 utilizadas como dataset en unos pocos minutos, un esfuerzo ínfimo en comparació
n a realizar esta tarea manualmente, o bien a reescribir todas estas especificac
iones a su equivalente WSDL y utilizar el conversor existente.
\end_layout

\begin_layout Standard
Para permitir el reuso, fue necesario almacenar la Base de Conocimiento
 (KB) de manera persistente, para que los casos retenidos se mantengan en
 futuras ejecuciones, y además no tener que realizar la conversión al Metamodelo
 de los servicios en cada una de las ejecuciones.
 Para esto se decidió almacenar cada Caso en un Sistema Gestor de Base de
 Datos basado en documentos llamado MongoDB.
 Fue de gran utilidad contar con esta Base de Conocimiento persistente a
 la hora de realizar la evaluación experimental, puesto a que se realizaron
 más de 40 consultas contando ambos experimentos, pero las 1742 especificaciones
 de Servicios Web pertenecientes al dataset fueron convertidas al Metamodelo
 SoaML una sola vez.
\end_layout

\begin_layout Paragraph*
Objetivo 3: Realizar la integración de los componentes desarrollados, ajustando
 los mecanismos de evaluación existentes para selección de servicios al
 contexto de CBR.
\end_layout

\begin_layout Standard
Fue necesario integrar los componentes desarrollados como parte del Objetivo
 2 (Conversor de descripciones Swagger y Base de conocimientos persistente)
 con los mecanismos de evaluación y selección de servicios presentado a
 lo largo de los trabajos previos, conformando una herramienta de soporte
 automatizado al proceso de CBR para evaluación y selección de servicios,
 definido en el Objetivo 1.
 Para ello, se extrajo y reutilizó la lógica subyacente a los componentes
 de la evaluación de servicios existente.
 Entre otras, los mecanismos de evaluación semántico-estructural de elementos
 de signatura (nombres de operaciones, parámetros de entrada/salida, tipos
 de datos complejos, etc.), que constituyó la función de similitud en el
 esquema CBR.
 
\end_layout

\begin_layout Standard
La integración de los mecanismos de evaluación existentes (implementados
 en Java) con los nuevos componentes se realizó utilizando Kotlin, otro
 lenguaje que se ejecuta sobre la JVM (Java Virtual Machine).
 El mismo simplifica el trabajo del desarrollador ya que es más actual y
 totalmente interoperable con Java.
 Además, para la fácil y rápida replicación del entorno se utilizó Docker,
 una tecnología de virtualización a través de contenedores (
\emph on
containers
\emph default
) que engloba su propia aplicación, herramientas, librería y archivos de
 configuración.
 Esto permite de ahora en más ejecutar el Razonador Basado en Casos en distintas
 arquitecturas (Windows, Linux y Mac OS), sin realizar ninguna instalación
 (p.
 ej.
 Java, MongoDB, etc.) ni modificación, sólo con la ejecución de un comando
 \threehyphens
 como se vió en la validación experimental del Capítulo
\begin_inset space ~
\end_inset

4.
\end_layout

\begin_layout Section
Trabajo Futuro
\begin_inset CommandInset label
LatexCommand label
name "sec:Trabajo-Futuro"

\end_inset


\end_layout

\begin_layout Standard
En función de lo estudiado en esta tesis, se identificaron algunos aspectos
 para continuar la optimización del Método de Evaluación y Selección de
 Servicios Web utilizando la metodología CBR.
 Estos aspectos se detallan a continuación: 
\end_layout

\begin_layout Itemize
Desarrollar otros conversores, para otras descripciones de servicios como
 WADL
\begin_inset space ~
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "medvidovic2000classification"

\end_inset

, OpenAPI V3
\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://www.openapis.org/
\end_layout

\end_inset


\end_layout

\end_inset

, RESTful API Modeling Language (RAML)
\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://raml.org/
\end_layout

\end_inset


\end_layout

\end_inset

 o API Blueprint
\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://apiblueprint.org/
\end_layout

\end_inset


\end_layout

\end_inset

, le daría un valor agregado a la herramienta ya que aumentaría aún mas
 el soporte de servicios heterogéneos.
\end_layout

\begin_layout Itemize
Desarrollar un módulo 
\emph on
desconversor 
\emph default
o un conversor inverso que a partir de una instancia del Metamodelo de descripci
ones de Servicios Web genere una de las especificación disponibles (actualmente
 WSDL y OpenAPI), lo cual permitiría hacer conversiones entre cualquier
 tipo de especificación soportada, es decir, a partir de una especificación
 WSDL existente, generar su especificación análoga OpenAPI y viceversa.
\end_layout

\begin_layout Itemize
Definir un proceso de generación de adaptadores (
\emph on
Wrappers
\emph default
) en función del Metamodelo, dentro de la etapa de 
\emph on
Adaptación
\emph default
 de la Metodología CBR mencionada en la Sección 
\begin_inset CommandInset ref
LatexCommand ref
reference "par:Resolviendo-el-Caso"

\end_inset

.
 Cada 
\emph on
Wrapper
\emph default
 representa una posible correspondencia de las operaciones del 
\emph on
Problema
\emph default
 del nuevo 
\emph on
Caso
\emph default
 a evaluar
\emph on
 
\emph default

\begin_inset Formula $C^{N}$
\end_inset

 con respecto a las operaciones del 
\emph on
Problema
\emph default
 del 
\emph on
Caso Candidato
\emph default
 
\begin_inset Formula $C^{C}$
\end_inset

 .
 Esto permitiría comunicarnos con el Servicio Web candidato de la forma
 más sencilla y automática posible, sin necesidad de modificar el consumidor
 del servicio.
\end_layout

\begin_layout Itemize
A partir de una instancia del metamodelo, generar un 
\emph on
mock
\emph default
 del servicio con una API para cualquiera de las especificaciones disponibles.
 Esto facilitaría y agilizaría el prototipado y desarrollo del cliente consumido
r del servicio así como también minimiza el riesgo de desperdiciar esfuerzos
 de desarrollo debido a especificaciones de requerimientos ambiguas o incompleta
s
\begin_inset CommandInset citation
LatexCommand cite
key "zhang2003mockup1,zhang2003mockup2"

\end_inset

.
\end_layout

\begin_layout Itemize
Automatizar y permitir la Composición de Servicios cuando se realice una
 nueva consulta.
 Hay casos donde la solución óptima para el nuevo Caso requerido no se encuentra
 en un solo Caso de los disponibles, sino que es necesario componer dos
 o varios servicios con el fin de satisfacer todas las necesidades.
 Existen varios tipos de composiciones posibles, por ejemplo: crear una
 sola interfaz con las operaciones de varios servicios (Unión), o utilizar
 la salida de una operación de un servicio como entrada de una operación
 de otro servicio (Secuencia).
 Para ello es necesario implementar un módulo de software que genere estos
 Casos candidatos compuestos permitiendo expandir aún más el universo de
 soluciones posibles.
 Este aspecto crucial está siendo abordado actualmente en las tesis en desarroll
o.
\end_layout

\end_body
\end_document
